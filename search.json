[{"path":"https://mwhalen18.github.io/sewage/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 sewage authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mwhalen18.github.io/sewage/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Whalen. Author, maintainer.","code":""},{"path":"https://mwhalen18.github.io/sewage/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Whalen M (2023). sewage: Sewage: Light-Weight Data Pipelining Tool. https://github.com/mwhalen18/sewage, https://mwhalen18.github.io/sewage/.","code":"@Manual{,   title = {sewage: Sewage: A Light-Weight Data Pipelining Tool},   author = {Matthew Whalen},   year = {2023},   note = {https://github.com/mwhalen18/sewage, https://mwhalen18.github.io/sewage/}, }"},{"path":"https://mwhalen18.github.io/sewage/index.html","id":"sewage","dir":"","previous_headings":"","what":"Sewage: A Light-Weight Data Pipelining Tool","title":"Sewage: A Light-Weight Data Pipelining Tool","text":"goal sewage provide light-weight pipelining interface data analyses. Rather construct long scripts intermiediate datasets processes, can construct single pipeline run single call.","code":""},{"path":"https://mwhalen18.github.io/sewage/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Sewage: A Light-Weight Data Pipelining Tool","text":"can install development version sewage Github:","code":"devtools::install_github(\"mwhalen18/sewage\")"},{"path":"https://mwhalen18.github.io/sewage/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Sewage: A Light-Weight Data Pipelining Tool","text":"example construct simple pipeline. can use function component pipeline, including custom functions define import external source. Currently, 3 components ready use: Nodes, Splitters, Joiners. Nodes take one object input return exactly one object. Splitters take exactly one object may return number outputs greater 1. Joiners take multiple objects return 1 object according method pass Joiner (components ). Note outputs Splitter accessible specifying name splitter component (case Splitter) suffixed outgoing edge format {name}.output_{}. first node pipeline specify argument passed pipeline execute (). can easily visualize pipeline using draw method.","code":"library(sewage) subset_data = function(x) {   subset(x, cyl == 6) } summarizer = function(x) {   return(summary(x[['disp']])) } pipeline = Pipeline() pipeline = pipeline |>   add_node(component = readr::read_csv, name = \"Reader\", input = \"file\") |>   add_node(component = Splitter(), name = \"Splitter\", input = \"Reader\") |>   add_node(component = subset_data, name = \"Subsetter\", input = \"Splitter.output_2\") |>   add_node(component = summarizer, name = \"Summarizer\", input = \"Splitter.output_1\")"},{"path":"https://mwhalen18.github.io/sewage/reference/Joiner.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a Joiner object — Joiner","title":"Initialize a Joiner object — Joiner","text":"Initialize Joiner object","code":""},{"path":"https://mwhalen18.github.io/sewage/reference/Joiner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a Joiner object — Joiner","text":"","code":"Joiner(method)"},{"path":"https://mwhalen18.github.io/sewage/reference/Joiner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a Joiner object — Joiner","text":"method function join incoming objects together","code":""},{"path":"https://mwhalen18.github.io/sewage/reference/Pipeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a sewage Pipeline — Pipeline","title":"Initialize a sewage Pipeline — Pipeline","text":"Initialize sewage Pipeline","code":""},{"path":"https://mwhalen18.github.io/sewage/reference/Pipeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a sewage Pipeline — Pipeline","text":"","code":"Pipeline()"},{"path":"https://mwhalen18.github.io/sewage/reference/Pipeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a sewage Pipeline — Pipeline","text":"sewage pipeline object","code":""},{"path":"https://mwhalen18.github.io/sewage/reference/Splitter.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a splitter object — Splitter","title":"Initialize a splitter object — Splitter","text":"Splitter takes exactly one input node propogates input n output nodes.","code":""},{"path":"https://mwhalen18.github.io/sewage/reference/Splitter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a splitter object — Splitter","text":"","code":"Splitter(edges = 2)"},{"path":"https://mwhalen18.github.io/sewage/reference/Splitter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a splitter object — Splitter","text":"edges number outputs. Must greater 1","code":""},{"path":"https://mwhalen18.github.io/sewage/reference/Splitter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize a splitter object — Splitter","text":"executing Splitter object, pipeline contains n outputs named SplitterName_output{}.","code":""},{"path":"https://mwhalen18.github.io/sewage/reference/Splitter.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Initialize a splitter object — Splitter","text":"ouputs Splitter object accessed naming convention {name}.output_{} name specified name Splitter object. allows pass split objects downstream nodes access pipeline results.","code":""},{"path":"https://mwhalen18.github.io/sewage/reference/Splitter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize a splitter object — Splitter","text":"","code":"if (FALSE) { pipeline = Pipeline() pipeline = pipeline |>     add_node(name = 'Splitter', component = Splitter(), input = 'file') result = run(pipeline, file = mtcars) result$outputs$Splitter.output_1 result$outputs$Splitter.output_2 }"},{"path":"https://mwhalen18.github.io/sewage/reference/add_node.html","id":null,"dir":"Reference","previous_headings":"","what":"add node to a sewage pipeline — add_node","title":"add node to a sewage pipeline — add_node","text":"add_node() place new node specified pipeline. executed sequentially pipeline executed using run()","code":""},{"path":"https://mwhalen18.github.io/sewage/reference/add_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add node to a sewage pipeline — add_node","text":"","code":"add_node(pipeline, component, name, input, ...)"},{"path":"https://mwhalen18.github.io/sewage/reference/add_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add node to a sewage pipeline — add_node","text":"pipeline initialized  sewage pipeline component function executed. Must valid function specification exported sewage object including Joiner Splitter name name give given component. used `input` parameter downstream nodes input node use input `component`. Inputs either (1) name existing node pipeline, (2) name(s) argument(s) first ndoe pipeline. names can whatever want, match arguments pass run() ... additional arguments passed `component` argument","code":""},{"path":"https://mwhalen18.github.io/sewage/reference/add_node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add node to a sewage pipeline — add_node","text":"sewage_pipeline object","code":""},{"path":"https://mwhalen18.github.io/sewage/reference/add_node.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add node to a sewage pipeline — add_node","text":"","code":"# Using predefined functions if (FALSE) { my_func = function(df) {     df %>%         head(15) } pipeline = Pipeline() pipeline = pipeline |>     add_node(name = 'reader', component = readr::read_csv, input = 'file', show_col_types=FALSE) |>     add_node(name = 'processor', component = my_func, input = 'reader') }"},{"path":"https://mwhalen18.github.io/sewage/reference/execute.html","id":null,"dir":"Reference","previous_headings":"","what":"execute a pipeline component — execute","title":"execute a pipeline component — execute","text":"execute pipeline component","code":""},{"path":"https://mwhalen18.github.io/sewage/reference/execute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"execute a pipeline component — execute","text":"","code":"execute(x, envir)"},{"path":"https://mwhalen18.github.io/sewage/reference/execute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"execute a pipeline component — execute","text":"x component node executed envir calling environment","code":""},{"path":"https://mwhalen18.github.io/sewage/reference/run.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is the extry point for executing a pipeline object — run","title":"This function is the extry point for executing a pipeline object — run","text":"function extry point executing pipeline object","code":""},{"path":"https://mwhalen18.github.io/sewage/reference/run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is the extry point for executing a pipeline object — run","text":"","code":"run(pipeline, ...)"},{"path":"https://mwhalen18.github.io/sewage/reference/run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function is the extry point for executing a pipeline object — run","text":"pipeline initialized pipeline object ... parameter(s) pass first node pipeline. match `input` parameter `add_node` first node. case multiple inputs, argument match name starting node pipeline.","code":""}]
